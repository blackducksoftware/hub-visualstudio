<UserControl x:Class="BlackDuckHub.VisualStudio.UI.BlackDuckHubUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"  
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog" 
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" >

    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="VSStyledComboBox" BasedOn="{StaticResource VsComboBoxStyleKey}" TargetType="{x:Type ComboBox}"/>
            <Style BasedOn="{StaticResource VSStyledComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="Margin" Value="0,0,0,8" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Width" Value="150" />
            </Style>
            <Style x:Key="VSStyledButton" BasedOn="{StaticResource VsButtonStyleKey}" TargetType="{x:Type Button}"/>
            <Style BasedOn="{StaticResource VSStyledButton}" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="5" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel LastChildFill="True">
        <Border DockPanel.Dock="Top" >
            <Border.Resources>
                <Style x:Key="StackPanelStyle" TargetType="StackPanel">
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientBeginKey}}" />
                </Style>
            </Border.Resources>
            <StackPanel Orientation="Horizontal" Style="{StaticResource StackPanelStyle}">
                <StackPanel.Resources>
                    <Style x:Key="SeparatorStyle" TargetType="Separator">
                        <Setter Property="Margin" Value="10 0 10 0" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.PanelTextKey}}" />
                    </Style>
                </StackPanel.Resources>
                <Button Name="btnRunHubScan" Click="btnRunHubScan_Click">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                                <Setter Property="Padding" Value="3, 0, 0, 0" />
                            </Style>
                        </StackPanel.Resources>
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.BinaryFile}"/>
                        <TextBlock Style="{StaticResource TextBlockStyle}" Text="Get Packages" />
                    </StackPanel>
                </Button>
                <Separator Name="sepHeader" Style="{StaticResource SeparatorStyle}" />
                <ComboBox x:Name="cmbProjects" SelectionChanged="cmbProjects_SelectionChanged" Height="24" Margin="0"/>
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Bottom" >
            <Border.Resources>
                <Style x:Key="StatusBarStyle" TargetType="StatusBar">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.StatusBarTextKey}}" />
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientBeginKey}}" />
                    <Setter Property="Padding" Value="5" />
                </Style>
            </Border.Resources>
            <StatusBar Name="sbHubScanStatus" Style="{StaticResource StatusBarStyle}">
                <StatusBar.Resources>
                    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.PanelTextKey}}" />
                    </Style>
                    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
                        <Setter Property="Width" Value="100" />
                        <Setter Property="Height" Value="15" />
                        <Setter Property="IsIndeterminate" Value="True" />
                    </Style>
                </StatusBar.Resources>
                <TextBlock Name="tbStatus" Visibility="Hidden" Style="{StaticResource TextBlockStyle}" />
                <Separator Name="sepStatus" Visibility="Hidden" />
                <ProgressBar Name="pbStatus" Visibility="Hidden" Style="{StaticResource ProgressBarStyle}" />
            </StatusBar>
        </Border>
        <DockPanel LastChildFill="True">
            <Grid>
                <Grid.Resources>
                    <DataTemplate x:Key="PackageTemplate">
                        <StackPanel Orientation="Horizontal">
                            <imaging:CrispImage Name="VulnImage" Width="16" Height="16" HorizontalAlignment="Left" Margin="10, 5, 5, 5" />
                            <TextBlock Text="{Binding Package}" Padding="5, 5, 5, 0" />
                            <TextBlock Text="{Binding Version}" Padding="0, 5, 10, 0" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding PackageStatus}" Value="Vulnerable">
                                <Setter TargetName="VulnImage" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusSecurityCritical}"/>
                                <Setter TargetName="VulnImage" Property="ToolTip" Value="Known Security Vulnerabilities Found"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PackageStatus}" Value="Secure">
                                <Setter TargetName="VulnImage" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusSecurityOK}"/>
                                <Setter TargetName="VulnImage" Property="ToolTip" Value="No Known Security Vulnerabilities"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PackageStatus}" Value="NotFound">
                                <Setter TargetName="VulnImage" Property="Moniker" Value="{x:Static catalog:KnownMonikers.StatusSecurityWarning}"/>
                                <Setter TargetName="VulnImage" Property="ToolTip" Value="Package Not Found in Black Duck KB"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <DataTemplate x:Key="SecurityRiskTemplate" >
                        <Border Padding="5">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Border Name="HighVulnBorder" CornerRadius="2,2,2,2" BorderThickness="1" BorderBrush="#9C251F" Margin="0,0,5,0">
                                    <TextBlock Name="NumHighVulns" Foreground="White" Text="{Binding NumHighVulns}" Background="#9C251F" VerticalAlignment="Center" Padding="10, 0, 10, 0"/>
                                </Border>
                                <Border Name="MediumVulnBorder" CornerRadius="2,2,2,2" BorderThickness="1" BorderBrush="#E78C87" Margin="0,0,5,0">
                                    <TextBlock Name="NumMediumVulns" Foreground="White" Text="{Binding NumMediumVulns}" Background="#E78C87" VerticalAlignment="Center" Padding="10, 0, 10, 0" />
                                </Border>
                                <Border Name="LowVulnBorder" CornerRadius="2,2,2,2" BorderThickness="1" BorderBrush="#999999" Margin="0,0,5,0">
                                    <TextBlock Name="NumLowVulns" Foreground="White" Text="{Binding NumLowVulns}" Background="#999999" VerticalAlignment="Center" Padding="10, 0, 10, 0" />
                                </Border>
                            </StackPanel>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding NumHighVulns}" Value="{x:Null}">
                                <Setter TargetName="NumHighVulns" Property="Background" Value="#F7F7F7" />
                                <Setter TargetName="NumHighVulns" Property="Text" Value="0" />
                                <Setter TargetName="NumHighVulns" Property="Foreground" Value="#F7F7F7" />
                                <Setter TargetName="HighVulnBorder" Property="BorderBrush" Value="#F7F7F7" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding NumMediumVulns}" Value="{x:Null}">
                                <Setter TargetName="NumMediumVulns" Property="Background" Value="#F7F7F7" />
                                <Setter TargetName="NumMediumVulns" Property="Text" Value="0" />
                                <Setter TargetName="NumMediumVulns" Property="Foreground" Value="#F7F7F7" />
                                <Setter TargetName="MediumVulnBorder" Property="BorderBrush" Value="#F7F7F7" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding NumLowVulns}" Value="{x:Null}">
                                <Setter TargetName="NumLowVulns" Property="Background" Value="#F7F7F7" />
                                <Setter TargetName="NumLowVulns" Property="Text" Value="0" />
                                <Setter TargetName="NumLowVulns" Property="Foreground" Value="#F7F7F7" />
                                <Setter TargetName="LowVulnBorder" Property="BorderBrush" Value="#F7F7F7" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="Padding" Value="10,5,10,5" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.PanelTextKey}}" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.PanelTitleBarKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.BrandedUIBorderKey}}" />
                        <Setter Property="BorderThickness" Value="0, 1, 1, 1" />
                    </Style>
                    <Style x:Key="DataGridStyle" TargetType="DataGrid">
                        <Setter Property="AutoGenerateColumns" Value="False" />
                        <Setter Property="IsReadOnly" Value="True" />
                        <Setter Property="GridLinesVisibility" Value="None" />
                        <Setter Property="RowHeaderWidth" Value="0" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="SelectionMode" Value="Single" />
                        <Setter Property="SelectionUnit" Value="FullRow" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="RowBackground" Value="Transparent" />
                        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}" />
                        <Setter Property="ItemsSource" Value="{Binding ElementName=dgPackages, Path=SelectedItem.Vulnerabilities}" />
                        <Setter Property="CanUserResizeColumns" Value="False" />
                    </Style>
                    <Style x:Key="BorderStyle" TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientBeginKey}}" />
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" >
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type DataGridRow}">
                        <EventSetter Event="MouseDoubleClick" Handler="dgPackagesRow_DoubleClick"/>
                    </Style>
                </Grid.Resources>
                <DataGrid Grid.Column="0" Name="dgPackages" Style="{StaticResource DataGridStyle}" ItemsSource="{Binding Packages}" GotFocus="dgPackages_GotFocus" LostFocus="dgPackages_LostFocus">
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightGray" Opacity="0.25"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"  Color="{DynamicResource {x:Static vsfx:VsColors.PanelTextKey}}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="{DynamicResource {x:Static vsfx:VsColors.PanelTextKey}}"/>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Visibility="Hidden" Binding="{Binding HubLink}" />
                        <DataGridTemplateColumn Header="Package" CellTemplate="{StaticResource PackageTemplate}" />
                        <DataGridTextColumn Header="License" Binding="{Binding License}" Width="*" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Padding" Value="10, 5, 0, 0" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="Security Risk" CellTemplate="{StaticResource SecurityRiskTemplate}" Width="Auto" >
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource ColumnHeaderStyle}">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="BorderThickness" Value="0,1,0,1"/>
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </DockPanel>
    </DockPanel>



</UserControl>
